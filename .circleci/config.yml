version: 2.1

executors:
  build-executor:
    docker:
      - image: cimg/openjdk:8.0-browsers

parameters:
  cache_version:
    description: the current version of the cache
    type: string
    default: v3

orbs:
  branch-management: opennms/branch-management@2.3.0

commands:
  cached_checkout:
    description: Restore and Update Source Cache
    steps:
      - restore_cache:
          keys:
            - source-<< pipeline.parameters.cache_version >>-{{ .Branch }}-{{ .Revision }}
            - source-<< pipeline.parameters.cache_version >>-{{ .Branch }}-
            - source-<< pipeline.parameters.cache_version >>-

      - checkout

      # Save source cache
      - save_cache:
          key: source-<< pipeline.parameters.cache_version >>-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
  fetch_maven_cache:
    description: Download and Cache Maven Dependencies
    steps:
      - run:
          name: create checksum file
          command: |
            find * -name pom.xml | sort -u | xargs cat > /tmp/megapom.xml

      - restore_cache:
          keys:
          - maven-<< pipeline.parameters.cache_version >>-dependencies-{{ checksum "/tmp/megapom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - maven-<< pipeline.parameters.cache_version >>-dependencies-

      - run:
          name: Collect Maven Dependencies
          command: |
             mvn dependency:resolve dependency:resolve-plugins dependency:go-offline || true

      - run:
          name: Clean Old Maven Repository Entries
          command: |
            if [ -d ~/.m2/repository ]; then
              find ~/.m2/repository -type f -ctime +14 -exec rm -rf {} \; 2>/dev/null || :
              find ~/.m2/repository -depth -type d -print | while read -r DIR; do
                rmdir "$DIR" 2>/dev/null || :
              done
            fi

      - save_cache:
          paths:
            - ~/.m2
          key: << pipeline.parameters.cache_version >>-dependencies-{{ checksum "/tmp/megapom.xml" }}

jobs:
  build:
    machine: true
    resource_class: large

    environment:
      MAVEN_OPTS: -Xmx4096m -XX:+UseParallelGC

    steps:
      - cached_checkout
      - fetch_maven_cache

      - run:
          name: Run the tests
          no_output_timeout: 20m
          command: mvn -DskipITs=false verify

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: assembly/target/newts*

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - newts

  deploy:
    machine: true

    steps:
      - attach_workspace:
          at: /home/circleci

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Deploy the artifacts
          command: |
            mvn -s .circleci.settings.xml -DskipTests deploy

workflows:
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
               - /^release-.*/
               - master
